@import 'tailwindcss';

@theme {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility contentPrimary {
  @apply text-zinc-950 dark:text-white;
}

@utility contentSecondary {
  @apply text-zinc-500 dark:text-zinc-400;
}

@utility contentTertiary {
  @apply text-zinc-950 dark:text-white;
}

@utility backgroundPrimary {
  @apply bg-white dark:bg-zinc-900;
}

@utility backgroundSecondary {
  @apply bg-zinc-50 dark:bg-zinc-800;
}

@utility backgroundTertiary {
  @apply bg-zinc-100 dark:bg-zinc-700;
}

@utility backgroundTransparentCard {
  background-color: var(--backgroundTransparentCard);
}

@utility borderPrimary {
  @apply border-zinc-200 dark:border-zinc-700;
}

@utility borderSecondary {
  @apply border-zinc-100 dark:border-zinc-800;
}

@utility borderTertiary {
  @apply border-zinc-50 dark:border-zinc-950;
}

@utility backgroundHoverOverlay {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  &:hover::after {
    background-color: var(--backgroundHover);
  }
}

@utility backgroundInverseHoverOverlay {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  &:hover::after {
    background-color: var(--backgroundInverseHover);
  }
}

@utility primaryButton {
  box-shadow:
    0px 1px 0px 0px rgba(255, 255, 255, 0.15) inset,
    0px 1px 2px 0px rgba(88, 101, 242, 0.05);
  @apply w-fit relative flex gap-2 px-3 pr-4 h-10 items-center rounded-lg select-none bg-[#5865F2] border border-[#5865F2] text-sm font-semibold text-white backgroundInverseHoverOverlay;
}

@utility plainButton {
  @apply relative flex h-8 w-8 items-center justify-center rounded-lg overflow-hidden select-none text-sm font-semibold contentPrimary bg-transparent hover:backgroundPrimary backgroundHoverOverlay;
}

@utility input {
  @apply relative flex w-full items-center justify-between gap-2 px-3 h-9 rounded-lg text-sm backgroundPrimary border borderPrimary shadow-xs dark:shadow-none;

  &::after {
    content: '';
    position: absolute;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    @apply border-0 rounded-lg pointer-events-none;
  }

  &:hover::after {
    @apply border;
    border-color: var(--borderHover);
  }
}

@layer utilities {
  :root {
    --backgroundHover: rgba(0, 0, 0, 2.5%);
    --backgroundInverseHover: rgba(255, 255, 255, 5%);
    --backgroundTransparentCard: rgba(250, 250, 250, 72%);
    --borderHover: rgba(0, 0, 0, 0.2);
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --backgroundHover: rgba(255, 255, 255, 5%);
      --backgroundInverseHover: rgba(0, 0, 0, 5%);
      --backgroundTransparentCard: rgba(39, 39, 42, 72%);
      --borderHover: rgba(255, 255, 255, 0.1);
    }
  }
}

.p-sa {
  padding-top: env(safe-area-inset-top);
  padding-right: env(safe-area-inset-right);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
}

.pt-sa {
  padding-top: env(safe-area-inset-top);
}

.pr-sa {
  padding-right: env(safe-area-inset-right);
}

.pb-sa {
  padding-bottom: env(safe-area-inset-bottom);
}

.pl-sa {
  padding-left: env(safe-area-inset-left);
}

body {
  font-family: Arial, Helvetica, sans-serif;
}